name: Deploy

on:
  workflow_run:
      # TODO: disable/renable spacelift push policy
      # This will never run until it's changed to a valid workflow name
    workflows: [foo]
    types: [completed]

permissions:
  contents: write
  packages: write
  id-token: write
  issues: write
  pull-requests: write

jobs:
  on-success:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Install spacectl
        uses: spacelift-io/setup-spacectl@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Notify Spacelift of release or secret scan completion (success)
        env:
          SPACELIFT_API_KEY_ENDPOINT: https://trufflesec.app.spacelift.io
          SPACELIFT_API_KEY_ID: ${{ secrets.SPACELIFT_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ secrets.SPACELIFT_API_KEY_SECRET }}
        run: spacectl run-external-dependency mark-completed --id "${GITHUB_SHA}-release-or-scan" --status finished

  on-failure:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Install spacectl
        uses: spacelift-io/setup-spacectl@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Notify Spacelift of release or secret scan completion (failed)
        env:
          SPACELIFT_API_KEY_ENDPOINT: https://trufflesec.app.spacelift.io
          SPACELIFT_API_KEY_ID: ${{ secrets.SPACELIFT_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ secrets.SPACELIFT_API_KEY_SECRET }}
        run: spacectl run-external-dependency mark-completed --id "${GITHUB_SHA}-release-or-scan" --status failed
